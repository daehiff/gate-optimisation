from evaluations import *from utils import generate_random_circuit, get_circuit_statsimport pandas as pdNAME_EVALUATION = {    "tket": tket_evaluation,    "qiskit": qiskit_evaluation,    "tpar": tpar_evaluation,    "voqc": voqc_evaluation,    "qfast": q_fast_evaluation,    "pyzx": pyzx_evaluation,}def main():    print(NAME_EVALUATION.items())    df = pd.DataFrame()    for i in range(10):        print(f"At {i}")        df = random_evaluation(df, i, 4, 10)    df.to_csv("out.csv")def random_evaluation(df: pd.DataFrame, i: int, qubit_count: int, num_gates: int):    qc = generate_random_circuit(qubit_count, num_gates)    clifford_count, non_clifford, two_qubit_count, overall_gate_count, depth = get_circuit_stats(qc)    df = df.append({"circuit": i,                    "circ_q_count": qubit_count,                    "circ_num_gates": num_gates,                    "algorithm": 'default',                    "clifford_count": clifford_count,                    "non_clifford": non_clifford,                    "two_qubit_count": two_qubit_count,                    "overall_gate_count": overall_gate_count,                    "depth": depth}, ignore_index=True)    for name, evaluation in NAME_EVALUATION.items():        qc_ = evaluation(qc)        clifford_count, non_clifford, two_qubit_count, overall_gate_count, depth = get_circuit_stats(qc_)        df = df.append({"circuit": i,                        "circ_q_count": qubit_count,                        "circ_num_gates": num_gates,                        "algorithm": name,                        "clifford_count": clifford_count,                        "non_clifford": non_clifford,                        "two_qubit_count": two_qubit_count,                        "overall_gate_count": overall_gate_count,                        "depth": depth}, ignore_index=True)    return dfif __name__ == '__main__':    main()